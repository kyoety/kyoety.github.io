{"ast":null,"code":"const client_id=process.env.SPOTIFY_CLIENT_ID;const client_secret=process.env.SPOTIFY_CLIENT_SECRET;const refresh_token=process.env.SPOTIFY_REFRESH_TOKEN;const basic=btoa(`${client_id}:${client_secret}`);const NOW_PLAYING_ENDPOINT=`https://api.spotify.com/v1/me/player/currently-playing`;const TOP_TRACKS_ENDPOINT=`https://api.spotify.com/v1/me/top/tracks`;const TOKEN_ENDPOINT=`https://accounts.spotify.com/api/token`;const getAccessToken=async()=>{const response=await fetch(TOKEN_ENDPOINT,{method:\"POST\",headers:{Authorization:`Basic ${basic}`,\"Content-Type\":\"application/x-www-form-urlencoded\"},body:new URLSearchParams({grant_type:\"refresh_token\",refresh_token})});return response.json();};export const getNowPlaying=async(client_id,client_secret,refresh_token)=>{const{access_token}=await getAccessToken(client_id,client_secret,refresh_token);return fetch(NOW_PLAYING_ENDPOINT,{headers:{Authorization:`Bearer ${access_token}`}});};export const getTopTracks=async()=>{const{access_token}=await getAccessToken();return fetch(TOP_TRACKS_ENDPOINT,{headers:{Authorization:`Bearer ${access_token}`}});};export default async function getNowPlayingItem(client_id,client_secret,refresh_token){const response=await getNowPlaying(client_id,client_secret,refresh_token);if(response.status===204||response.status>400){return false;}const song=await response.json();const albumImageUrl=song.item.album.images[0].url;const artist=song.item.artists.map(_artist=>_artist.name).join(\", \");const isPlaying=song.is_playing;const songUrl=song.item.external_urls.spotify;const title=song.item.name;return{albumImageUrl,artist,isPlaying,songUrl,title};}","map":{"version":3,"names":["client_id","process","env","SPOTIFY_CLIENT_ID","client_secret","SPOTIFY_CLIENT_SECRET","refresh_token","SPOTIFY_REFRESH_TOKEN","basic","btoa","NOW_PLAYING_ENDPOINT","TOP_TRACKS_ENDPOINT","TOKEN_ENDPOINT","getAccessToken","response","fetch","method","headers","Authorization","body","URLSearchParams","grant_type","json","getNowPlaying","access_token","getTopTracks","getNowPlayingItem","status","song","albumImageUrl","item","album","images","url","artist","artists","map","_artist","name","join","isPlaying","is_playing","songUrl","external_urls","spotify","title"],"sources":["/Users/katieye/Desktop/stuff/my_portfoliotest2/src/lib/SpotifyAPI.js"],"sourcesContent":["const client_id = process.env.SPOTIFY_CLIENT_ID\nconst client_secret = process.env.SPOTIFY_CLIENT_SECRET\nconst refresh_token = process.env.SPOTIFY_REFRESH_TOKEN\n\nconst basic = btoa(`${client_id}:${client_secret}`)\nconst NOW_PLAYING_ENDPOINT = `https://api.spotify.com/v1/me/player/currently-playing`\nconst TOP_TRACKS_ENDPOINT = `https://api.spotify.com/v1/me/top/tracks`\nconst TOKEN_ENDPOINT = `https://accounts.spotify.com/api/token`\n\nconst getAccessToken = async () => {\n  const response = await fetch(TOKEN_ENDPOINT, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Basic ${basic}`,\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    body: new URLSearchParams({\n      grant_type: \"refresh_token\",\n      refresh_token\n    })\n  })\n\n  return response.json()\n};\n\nexport const getNowPlaying = async (client_id, client_secret, refresh_token) => {\n  const { access_token } = await getAccessToken(\n      client_id,\n      client_secret,\n      refresh_token\n  );\n  return fetch(NOW_PLAYING_ENDPOINT, {\n      headers: {\n          Authorization: `Bearer ${access_token}`,\n      },\n  });\n};\n\nexport const getTopTracks = async () => {\n  const { access_token } = await getAccessToken()\n\n  return fetch(TOP_TRACKS_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  })\n};\n\nexport default async function getNowPlayingItem(\n  client_id,\n  client_secret,\n  refresh_token\n) {\n  const response = await getNowPlaying(client_id, client_secret, refresh_token);\n  if (response.status === 204 || response.status > 400) {\n      return false;\n  }\n  const song = await response.json();\n  const albumImageUrl = song.item.album.images[0].url;\n  const artist = song.item.artists.map((_artist) => _artist.name).join(\", \");\n  const isPlaying = song.is_playing;\n  const songUrl = song.item.external_urls.spotify;\n  const title = song.item.name;\n  \n  return {\n      albumImageUrl,\n      artist,\n      isPlaying,\n      songUrl,\n      title,\n  };\n}"],"mappings":"AAAA,KAAM,CAAAA,SAAS,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAC/C,KAAM,CAAAC,aAAa,CAAGH,OAAO,CAACC,GAAG,CAACG,qBAAqB,CACvD,KAAM,CAAAC,aAAa,CAAGL,OAAO,CAACC,GAAG,CAACK,qBAAqB,CAEvD,KAAM,CAAAC,KAAK,CAAGC,IAAI,CAAC,GAAGT,SAAS,IAAII,aAAa,EAAE,CAAC,CACnD,KAAM,CAAAM,oBAAoB,CAAG,wDAAwD,CACrF,KAAM,CAAAC,mBAAmB,CAAG,0CAA0C,CACtE,KAAM,CAAAC,cAAc,CAAG,wCAAwC,CAE/D,KAAM,CAAAC,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACH,cAAc,CAAE,CAC3CI,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPC,aAAa,CAAE,SAASV,KAAK,EAAE,CAC/B,cAAc,CAAE,mCAClB,CAAC,CACDW,IAAI,CAAE,GAAI,CAAAC,eAAe,CAAC,CACxBC,UAAU,CAAE,eAAe,CAC3Bf,aACF,CAAC,CACH,CAAC,CAAC,CAEF,MAAO,CAAAQ,QAAQ,CAACQ,IAAI,CAAC,CAAC,CACxB,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAAA,CAAOvB,SAAS,CAAEI,aAAa,CAAEE,aAAa,GAAK,CAC9E,KAAM,CAAEkB,YAAa,CAAC,CAAG,KAAM,CAAAX,cAAc,CACzCb,SAAS,CACTI,aAAa,CACbE,aACJ,CAAC,CACD,MAAO,CAAAS,KAAK,CAACL,oBAAoB,CAAE,CAC/BO,OAAO,CAAE,CACLC,aAAa,CAAE,UAAUM,YAAY,EACzC,CACJ,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAAA,CAAA,GAAY,CACtC,KAAM,CAAED,YAAa,CAAC,CAAG,KAAM,CAAAX,cAAc,CAAC,CAAC,CAE/C,MAAO,CAAAE,KAAK,CAACJ,mBAAmB,CAAE,CAChCM,OAAO,CAAE,CACPC,aAAa,CAAE,UAAUM,YAAY,EACvC,CACF,CAAC,CAAC,CACJ,CAAC,CAED,cAAe,eAAe,CAAAE,iBAAiBA,CAC7C1B,SAAS,CACTI,aAAa,CACbE,aAAa,CACb,CACA,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAS,aAAa,CAACvB,SAAS,CAAEI,aAAa,CAAEE,aAAa,CAAC,CAC7E,GAAIQ,QAAQ,CAACa,MAAM,GAAK,GAAG,EAAIb,QAAQ,CAACa,MAAM,CAAG,GAAG,CAAE,CAClD,MAAO,MAAK,CAChB,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAd,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAO,aAAa,CAAGD,IAAI,CAACE,IAAI,CAACC,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CACnD,KAAM,CAAAC,MAAM,CAAGN,IAAI,CAACE,IAAI,CAACK,OAAO,CAACC,GAAG,CAAEC,OAAO,EAAKA,OAAO,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAC1E,KAAM,CAAAC,SAAS,CAAGZ,IAAI,CAACa,UAAU,CACjC,KAAM,CAAAC,OAAO,CAAGd,IAAI,CAACE,IAAI,CAACa,aAAa,CAACC,OAAO,CAC/C,KAAM,CAAAC,KAAK,CAAGjB,IAAI,CAACE,IAAI,CAACQ,IAAI,CAE5B,MAAO,CACHT,aAAa,CACbK,MAAM,CACNM,SAAS,CACTE,OAAO,CACPG,KACJ,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}