{"ast":null,"code":"const client_id = process.env.SPOTIFY_CLIENT_ID;\nconst client_secret = process.env.SPOTIFY_CLIENT_SECRET;\nconst refresh_token = process.env.SPOTIFY_REFRESH_TOKEN;\nconst basic = btoa(`${client_id}:${client_secret}`);\nconst NOW_PLAYING_ENDPOINT = `https://api.spotify.com/v1/me/player/currently-playing`;\nconst TOP_TRACKS_ENDPOINT = `https://api.spotify.com/v1/me/top/tracks`;\nconst TOKEN_ENDPOINT = `https://accounts.spotify.com/api/token`;\nconst getAccessToken = async () => {\n  const response = await fetch(TOKEN_ENDPOINT, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Basic ${basic}`,\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    body: new URLSearchParams({\n      grant_type: \"refresh_token\",\n      refresh_token\n    })\n  });\n  return response.json();\n};\nexport const getNowPlaying = async () => {\n  const {\n    access_token\n  } = await getAccessToken();\n  return fetch(NOW_PLAYING_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  });\n};\nexport const getTopTracks = async () => {\n  const {\n    access_token\n  } = await getAccessToken();\n  return fetch(TOP_TRACKS_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  });\n};","map":{"version":3,"names":["client_id","process","env","SPOTIFY_CLIENT_ID","client_secret","SPOTIFY_CLIENT_SECRET","refresh_token","SPOTIFY_REFRESH_TOKEN","basic","btoa","NOW_PLAYING_ENDPOINT","TOP_TRACKS_ENDPOINT","TOKEN_ENDPOINT","getAccessToken","response","fetch","method","headers","Authorization","body","URLSearchParams","grant_type","json","getNowPlaying","access_token","getTopTracks"],"sources":["/Users/katieye/Desktop/my_portfolio/portfolio/src/components/spotify/SpotifyProfile.js"],"sourcesContent":["const client_id = process.env.SPOTIFY_CLIENT_ID\nconst client_secret = process.env.SPOTIFY_CLIENT_SECRET\nconst refresh_token = process.env.SPOTIFY_REFRESH_TOKEN\n\nconst basic = btoa(`${client_id}:${client_secret}`)\nconst NOW_PLAYING_ENDPOINT = `https://api.spotify.com/v1/me/player/currently-playing`\nconst TOP_TRACKS_ENDPOINT = `https://api.spotify.com/v1/me/top/tracks`\nconst TOKEN_ENDPOINT = `https://accounts.spotify.com/api/token`\n\nconst getAccessToken = async () => {\n  const response = await fetch(TOKEN_ENDPOINT, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Basic ${basic}`,\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    body: new URLSearchParams({\n      grant_type: \"refresh_token\",\n      refresh_token\n    })\n  })\n\n  return response.json()\n};\n\nexport const getNowPlaying = async () => {\n  const { access_token } = await getAccessToken()\n\n  return fetch(NOW_PLAYING_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  })\n};\n\nexport const getTopTracks = async () => {\n  const { access_token } = await getAccessToken()\n\n  return fetch(TOP_TRACKS_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${access_token}`\n    }\n  })\n};"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC/C,MAAMC,aAAa,GAAGH,OAAO,CAACC,GAAG,CAACG,qBAAqB;AACvD,MAAMC,aAAa,GAAGL,OAAO,CAACC,GAAG,CAACK,qBAAqB;AAEvD,MAAMC,KAAK,GAAGC,IAAI,CAAC,GAAGT,SAAS,IAAII,aAAa,EAAE,CAAC;AACnD,MAAMM,oBAAoB,GAAG,wDAAwD;AACrF,MAAMC,mBAAmB,GAAG,0CAA0C;AACtE,MAAMC,cAAc,GAAG,wCAAwC;AAE/D,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,cAAc,EAAE;IAC3CI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,aAAa,EAAE,SAASV,KAAK,EAAE;MAC/B,cAAc,EAAE;IAClB,CAAC;IACDW,IAAI,EAAE,IAAIC,eAAe,CAAC;MACxBC,UAAU,EAAE,eAAe;MAC3Bf;IACF,CAAC;EACH,CAAC,CAAC;EAEF,OAAOQ,QAAQ,CAACQ,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAM;IAAEC;EAAa,CAAC,GAAG,MAAMX,cAAc,CAAC,CAAC;EAE/C,OAAOE,KAAK,CAACL,oBAAoB,EAAE;IACjCO,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUM,YAAY;IACvC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAM;IAAED;EAAa,CAAC,GAAG,MAAMX,cAAc,CAAC,CAAC;EAE/C,OAAOE,KAAK,CAACJ,mBAAmB,EAAE;IAChCM,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUM,YAAY;IACvC;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}