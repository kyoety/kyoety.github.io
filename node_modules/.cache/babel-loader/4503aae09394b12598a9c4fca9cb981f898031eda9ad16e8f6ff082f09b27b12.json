{"ast":null,"code":"var _jsxFileName = \"/Users/katieye/Desktop/my_portfolio/portfolio/src/components/animations/FadeInFromBottom.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { useInView } from 'react-intersection-observer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FadeInFromBottom = ({\n  children\n}) => {\n  _s();\n  // Set up the intersection observer\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    // only trigger once\n    threshold: 0.1 // trigger when 10% of the div is in view\n  });\n\n  // Set up the spring animation\n  const springProps = useSpring({\n    opacity: inView ? 1 : 0,\n    transform: inView ? 'translateY(0)' : 'translateY(100px)',\n    config: {\n      tension: 200,\n      friction: 70\n    }\n  });\n  return (\n    /*#__PURE__*/\n    // The animated.div will apply the springProps to the div element\n    _jsxDEV(animated.div, {\n      ref: ref,\n      style: springProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(FadeInFromBottom, \"qoJWOGFcdtG9f+hVkbNI9DyJxRM=\", false, function () {\n  return [useInView, useSpring];\n});\n_c = FadeInFromBottom;\nexport default FadeInFromBottom;\nvar _c;\n$RefreshReg$(_c, \"FadeInFromBottom\");","map":{"version":3,"names":["React","useSpring","animated","useInView","jsxDEV","_jsxDEV","FadeInFromBottom","children","_s","ref","inView","triggerOnce","threshold","springProps","opacity","transform","config","tension","friction","div","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/katieye/Desktop/my_portfolio/portfolio/src/components/animations/FadeInFromBottom.jsx"],"sourcesContent":["import React from 'react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { useInView } from 'react-intersection-observer';\n\nconst FadeInFromBottom = ({ children }) => {\n  // Set up the intersection observer\n  const [ref, inView] = useInView({\n    triggerOnce: true, // only trigger once\n    threshold: 0.1,    // trigger when 10% of the div is in view\n  });\n\n  // Set up the spring animation\n  const springProps = useSpring({\n    opacity: inView ? 1 : 0,\n    transform: inView ? 'translateY(0)' : 'translateY(100px)',\n    config: { tension: 200, friction: 70 },\n  });\n\n  return (\n    // The animated.div will apply the springProps to the div element\n    <animated.div ref={ref} style={springProps}>\n      {children}\n    </animated.div>\n  );\n};\n\nexport default FadeInFromBottom;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,mBAAmB;AACvD,SAASC,SAAS,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC;EACA,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,SAAS,CAAC;IAC9BQ,WAAW,EAAE,IAAI;IAAE;IACnBC,SAAS,EAAE,GAAG,CAAK;EACrB,CAAC,CAAC;;EAEF;EACA,MAAMC,WAAW,GAAGZ,SAAS,CAAC;IAC5Ba,OAAO,EAAEJ,MAAM,GAAG,CAAC,GAAG,CAAC;IACvBK,SAAS,EAAEL,MAAM,GAAG,eAAe,GAAG,mBAAmB;IACzDM,MAAM,EAAE;MAAEC,OAAO,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAG;EACvC,CAAC,CAAC;EAEF;IAAA;IACE;IACAb,OAAA,CAACH,QAAQ,CAACiB,GAAG;MAACV,GAAG,EAAEA,GAAI;MAACW,KAAK,EAAEP,WAAY;MAAAN,QAAA,EACxCA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;AAEnB,CAAC;AAAChB,EAAA,CApBIF,gBAAgB;EAAA,QAEEH,SAAS,EAMXF,SAAS;AAAA;AAAAwB,EAAA,GARzBnB,gBAAgB;AAsBtB,eAAeA,gBAAgB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}